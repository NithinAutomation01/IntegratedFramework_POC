<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="173161" started-at="2020-03-24T19:51:46Z" finished-at="2020-03-24T19:54:39Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="173161" started-at="2020-03-24T19:51:46Z" finished-at="2020-03-24T19:54:39Z">
      <class name="com.testCases.BasicFlow">
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="startReport" is-config="true" duration-ms="185" started-at="2020-03-24T19:51:45Z" finished-at="2020-03-24T19:51:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setData()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="setData" is-config="true" duration-ms="0" started-at="2020-03-24T19:51:46Z" finished-at="2020-03-24T19:51:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="setUpClass" is-config="true" duration-ms="123" started-at="2020-03-24T19:51:46Z" finished-at="2020-03-24T19:51:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="report()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="report" is-config="true" duration-ms="12" started-at="2020-03-24T19:51:46Z" finished-at="2020-03-24T19:51:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="beforeMethod" is-config="true" duration-ms="5523" started-at="2020-03-24T19:51:46Z" finished-at="2020-03-24T19:51:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="tc001()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="tc001" duration-ms="33127" started-at="2020-03-24T19:51:51Z" finished-at="2020-03-24T19:52:24Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'Laptops')]"}
  (Session info: chrome=80.0.3987.149)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'HP', ip: '192.168.1.26', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:59920}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: a0dd2a38424e49c5c1d78fe605f0c957
*** Element info: {Using=xpath, value=//div[contains(text(),'Laptops')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[contains(text(),'Laptops')]"}
  (Session info: chrome=80.0.3987.149)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'HP', ip: '192.168.1.26', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.149, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\user\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:59920}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: a0dd2a38424e49c5c1d78fe605f0c957
*** Element info: {Using=xpath, value=//div[contains(text(),'Laptops')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.qa.pages.SubMenuPage.clickLaptops(SubMenuPage.java:12)
at com.testCases.BasicFlow.tc001(BasicFlow.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="afterMethod" is-config="true" duration-ms="5108" started-at="2020-03-24T19:52:24Z" finished-at="2020-03-24T19:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="beforeMethod" is-config="true" duration-ms="4710" started-at="2020-03-24T19:52:29Z" finished-at="2020-03-24T19:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="tc002()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="tc002" duration-ms="34892" started-at="2020-03-24T19:52:34Z" finished-at="2020-03-24T19:53:09Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at com.amazon.selenium.base.SeleniumBase.locateElement(SeleniumBase.java:293)
at com.qa.pages.Tv_Appliances_Electronics_SubmenuPage.clickTelevision(Tv_Appliances_Electronics_SubmenuPage.java:12)
at com.testCases.BasicFlow.tc002(BasicFlow.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc002 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="afterMethod" is-config="true" duration-ms="5146" started-at="2020-03-24T19:53:09Z" finished-at="2020-03-24T19:53:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="beforeMethod" is-config="true" duration-ms="5129" started-at="2020-03-24T19:53:14Z" finished-at="2020-03-24T19:53:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="tc003()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="tc003" duration-ms="34084" started-at="2020-03-24T19:53:19Z" finished-at="2020-03-24T19:53:53Z">
          <exception class="java.lang.RuntimeException">
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException
at com.amazon.selenium.base.SeleniumBase.locateElement(SeleniumBase.java:293)
at com.qa.pages.Tv_Appliances_Electronics_SubmenuPage.clickTelevision(Tv_Appliances_Electronics_SubmenuPage.java:12)
at com.testCases.BasicFlow.tc003(BasicFlow.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc003 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="afterMethod" is-config="true" duration-ms="5110" started-at="2020-03-24T19:53:53Z" finished-at="2020-03-24T19:53:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="beforeMethod" is-config="true" duration-ms="5051" started-at="2020-03-24T19:53:59Z" finished-at="2020-03-24T19:54:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tc005()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="tc005" duration-ms="8487" started-at="2020-03-24T19:54:04Z" finished-at="2020-03-24T19:54:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc005 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="afterMethod" is-config="true" duration-ms="5315" started-at="2020-03-24T19:54:12Z" finished-at="2020-03-24T19:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="beforeMethod" is-config="true" duration-ms="6637" started-at="2020-03-24T19:54:17Z" finished-at="2020-03-24T19:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tc008()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="tc008" duration-ms="9341" started-at="2020-03-24T19:54:24Z" finished-at="2020-03-24T19:54:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc008 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="afterMethod" is-config="true" duration-ms="5312" started-at="2020-03-24T19:54:33Z" finished-at="2020-03-24T19:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="tearDownClass" is-config="true" duration-ms="5" started-at="2020-03-24T19:54:39Z" finished-at="2020-03-24T19:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="stopReport()[pri:0, instance:com.testCases.BasicFlow@520a3426]" name="stopReport" is-config="true" duration-ms="370" started-at="2020-03-24T19:54:39Z" finished-at="2020-03-24T19:54:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopReport -->
      </class> <!-- com.testCases.BasicFlow -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
